name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '1.0.0'
        required: true
        type: string

env:
  NODE_VERSION: '18'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build:release
        env:
          NODE_ENV: production

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            release/*.dmg
            release/*.zip

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: release/*.exe

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: release/*.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create release in public repository
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
          PUBLIC_REPO: ${{ secrets.PUBLIC_REPO_NAME }}
        run: |
          # Get version from tag or input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          
          # Create release notes
          echo "## Wagoo $VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "Download the appropriate version for your platform:" >> release_notes.md
          echo "" >> release_notes.md
          echo "- **macOS**: Download the .dmg file" >> release_notes.md
          echo "- **Windows**: Download the .exe file" >> release_notes.md
          echo "- **Linux**: Download the .AppImage file" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Changes" >> release_notes.md
          git log --oneline --since="$(git describe --tags --abbrev=0 HEAD^)..HEAD" >> release_notes.md || echo "First release" >> release_notes.md
          
          # Create release in public repo
          gh release create "$VERSION" \
            --repo "$PUBLIC_REPO" \
            --title "Wagoo $VERSION" \
            --notes-file release_notes.md \
            macos-build/* \
            windows-build/* \
            linux-build/* 